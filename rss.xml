<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
    xmlns:content="http://purl.org/rss/1.0/modules/content/"
    xmlns:wfw="http://wellformedweb.org/CommentAPI/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:atom="http://www.w3.org/2005/Atom"
    xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
    xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
    xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd"
    >
<channel>
    <title>&#x8C9D;&#x514B;&#x68EE;&#x7684;&#x5C0F;&#x7AD9;&#x7AD9;</title>
    <atom:link href="https://k51qzi5uqu5dkymx3ipnb91r0m8hnjzih530mffz139egcnyl71h16cefhr8c6.eth.sucks/rss.xml" rel="self" type="application/rss+xml" />
    <link>https://k51qzi5uqu5dkymx3ipnb91r0m8hnjzih530mffz139egcnyl71h16cefhr8c6.eth.sucks/</link>
    <description><![CDATA[
    
    ]]></description>
    
    
    <item>
        <title>Xcode Swift Package Manager &#x7121;&#x6CD5;&#x4E0B;&#x8F09; GitHub &#x5305;&#x554F;&#x984C;</title>
        <link>https://k51qzi5uqu5dkymx3ipnb91r0m8hnjzih530mffz139egcnyl71h16cefhr8c6.eth.sucks/F2E0C31C-2DAE-4453-A3D9-CE76022EF0A5/</link>
        <guid>https://k51qzi5uqu5dkymx3ipnb91r0m8hnjzih530mffz139egcnyl71h16cefhr8c6.eth.sucks/F2E0C31C-2DAE-4453-A3D9-CE76022EF0A5/</guid>
        <pubDate>Thu, 18 Sep 2025 18:00:05 +0800</pubDate>
        
        <itunes:image href="https://k51qzi5uqu5dkymx3ipnb91r0m8hnjzih530mffz139egcnyl71h16cefhr8c6.eth.sucks/F2E0C31C-2DAE-4453-A3D9-CE76022EF0A5/Bildschirmfoto%202025-09-18%20um%2018.10.29.png" />    
        
        
        <description><![CDATA[
            <p>因為中國大陸網路複雜度的原因，GitHub 在不同時間，不同寬頻運營商，不同省份的訪問速度和可到情況都不同。</p> 
<p>而 GitHub 承擔了絕大部分的 swift package 的分發。</p> 
<p>但 Xcode 的網路請求並不會透過系統 proxy，這時看著 fetching... 就會幹著急。</p> 
<p>Xcode 雖然不經過系統的 proxy，但是 Terminal 可以呀！</p> 
<ol> 
 <li> <p>使用終端進入專案 root 目錄</p> </li> 
 <li> <p>複製並在終端執行終端代理命令（這裡以 clash 為演示）<br /> <img width="212" alt="Bildschirmfoto 2025-09-18 um 18.10.29" src="https://k51qzi5uqu5dkymx3ipnb91r0m8hnjzih530mffz139egcnyl71h16cefhr8c6.eth.sucks/F2E0C31C-2DAE-4453-A3D9-CE76022EF0A5/Bildschirmfoto 2025-09-18 um 18.10.29.png" /></p> <pre><code class="language-shell">export https_proxy=http://127.0.0.1:7897 http_proxy=http://127.0.0.1:7897 all_proxy=socks5://127.0.0.1:7897
</code></pre> </li> 
 <li> <p>再執行 xcodebuild 的 fetch swift package 的命令就好啦~</p> <pre><code class="language-shell">xcodebuild -resolvePackageDependencies -scmProvider system
</code></pre> </li> 
 <li> <p>當你看到 <code>resolved source packages</code> 就大功告成！</p> </li> 
</ol> 
<p>祝程式設計愉悅！</p>
        ]]></description>
    </item>
    
    <item>
        <title>&#x4F7F;&#x7528; GPG &#x7C3D;&#x540D; git commits</title>
        <link>https://k51qzi5uqu5dkymx3ipnb91r0m8hnjzih530mffz139egcnyl71h16cefhr8c6.eth.sucks/21770BDB-2D10-4EE5-8F21-ACA5E2B75F5C/</link>
        <guid>https://k51qzi5uqu5dkymx3ipnb91r0m8hnjzih530mffz139egcnyl71h16cefhr8c6.eth.sucks/21770BDB-2D10-4EE5-8F21-ACA5E2B75F5C/</guid>
        <pubDate>Tue, 29 Apr 2025 19:48:40 +0800</pubDate>
        
        
        <description><![CDATA[
            <h2>目的</h2> 
<p>因為 git 本身允許修改 commit，本文章指導如何在 macOS 作業系統中使用 GPG 對 git 提交進行數字簽名。透過這種方式，提交在 GitHub 或其它 git 程式碼管理系統上將被標記為已驗證，從而增加提交的可信度。🎉</p> 
<h2>配置步驟</h2> 
<h3>安裝 GPG</h3> 
<p>透過 Homebrew 安裝 GPG：</p> 
<pre><code class="language-ssh">brew install gpg
</code></pre> 
<p>安裝 GPG 工具，之後可以使用它來生成和管理金鑰對。</p> 
<p>檢查現有的 GPG 金鑰</p> 
<p>在生成新的 GPG 金鑰對之前，首先檢查是否已經存在 GPG 金鑰。執行以下命令：</p> 
<pre><code class="language-ssh">gpg --list-secret-keys --keyid-format LONG
如果命令沒有返回任何金鑰，說明你還沒有配置 GPG 金鑰。
% gpg --list-secret-keys --keyid-format LONG
gpg: directory '/Users/UserName/.gnupg' created
gpg: /Users/UserName/.gnupg/trustdb.gpg: trustdb created
</code></pre> 
<p>如果返回了金鑰資訊，則可以跳過生成 GPG 金鑰對的步驟。</p> 
<pre><code class="language-ssh">% gpg --list-secret-keys --keyid-format LONG
[keyboxd]
---------
sec   ed25519/E7175B0CAF8C4FE0 2024-09-16 [SC]
      *****************
uid                 [ultimate] UserName &lt;email@exmple.com&gt;
ssb   cv25519/88CAD4AB29BCB4B5 2024-09-16 [E]
</code></pre> 
<p>後面也可以透過這條命令檢視已有的金鑰</p> 
<h3>生成 GPG 金鑰對</h3> 
<p>生成新金鑰對：</p> 
<pre><code class="language-ssh">gpg --full-generate-key --expert
# 使用 --expert 選項可以支援 ECC 
# 加密演算法。如果選擇 RSA 演算法，則無需使用 --expert 選項
</code></pre> 
<ul> 
 <li>選擇金鑰型別：選擇 (9) ECC (sign and encrypt) <em>default</em></li> 
 <li>選擇演算法：選擇 (1) Curve 25519</li> 
 <li>設定金鑰過期時間：0 為永不過期</li> 
 <li>確認資訊 Key is valid for? (0) Is this correct? (y/N)</li> 
 <li>設定使用者 ID：確保郵箱地址與commit郵箱一致</li> 
 <li>設定密碼</li> 
</ul> 
<h3>匯出公鑰</h3> 
<p>獲取金鑰列表：</p> 
<pre><code class="language-ssh">gpg --list-secret-keys --keyid-format LONG
</code></pre> 
<p>示例輸出：</p> 
<pre><code class="language-ssh">% gpg --list-secret-keys --keyid-format LONG
gpg: checking the trustdb
gpg: marginals needed: 3  completes needed: 1  trust model: pgp
gpg: depth: 0  valid:   1  signed:   0  trust: 0-, 0q, 0n, 0m, 0f, 1u
[keyboxd]
---------
sec   ed25519/E7175B0CAF8C4FE0 2024-09-16 [SC]
      *****************
uid                 [ultimate] UserName &lt;email@exmple.com&gt;
ssb   cv25519/88CAD4AB29BCB4B5 2024-09-16 [E]
</code></pre> 
<p>記下 sec ed25519/ 後面的 GPG Key ID，例如 E7175B0CAF8C4FE0</p> 
<p>匯出公鑰：</p> 
<pre><code class="language-ssh">gpg --armor --export E7175B0CAF8C4FE0
</code></pre> 
<p>將匯出的公鑰複製並貼上到 GitHub 的 GPG 金鑰新增頁面上。</p> 
<pre><code class="language-ssh">-----BEGIN PGP PUBLIC KEY BLOCK-----
PUBLIC KEY
-----END PGP PUBLIC KEY BLOCK-----
</code></pre> 
<h3>配置 Git</h3> 
<p>設定 gpg-agent 環境變數：</p> 
<pre><code class="language-ssh">echo 'export GPG_TTY=$(tty)' &gt;&gt; ~/.zshrc
source ~/.zshrc
</code></pre> 
<p>這裡只寫了Oh my zsh的，其它工具自行改一下</p> 
<p>配置 Git 使用 GPG 簽名：</p> 
<p>當前目錄</p> 
<pre><code class="language-ssh">git config user.signingkey E7175B0CAF8C4FE0
git config commit.gpgsign true
</code></pre> 
<p>全域性</p> 
<pre><code class="language-ssh">git config --global user.signingkey E7175B0CAF8C4FE0
git config --global commit.gpgsign true
</code></pre> 
<p>注意替換為實際的 GPG Key ID。</p> 
<p>對於不需要 GPG 簽名的 Git 倉庫，進入倉庫目錄並執行：</p> 
<pre><code class="language-ssh">git config commit.gpgsign false
</code></pre> 
<p>祝程式設計愉悅！</p>
        ]]></description>
    </item>
    
    <item>
        <title>Mac &#x7C21;&#x55AE;&#x914D;&#x7F6E;&#x4E0D;&#x540C; host &#x7684; ssh-key</title>
        <link>https://k51qzi5uqu5dkymx3ipnb91r0m8hnjzih530mffz139egcnyl71h16cefhr8c6.eth.sucks/CB8DD277-C0E1-43C2-8D4E-FAC572EC4F98/</link>
        <guid>https://k51qzi5uqu5dkymx3ipnb91r0m8hnjzih530mffz139egcnyl71h16cefhr8c6.eth.sucks/CB8DD277-C0E1-43C2-8D4E-FAC572EC4F98/</guid>
        <pubDate>Sun, 27 Apr 2025 21:25:16 +0800</pubDate>
        
        <itunes:image href="https://k51qzi5uqu5dkymx3ipnb91r0m8hnjzih530mffz139egcnyl71h16cefhr8c6.eth.sucks/CB8DD277-C0E1-43C2-8D4E-FAC572EC4F98/github-add-ssh-key.png" />    
        
        
        <description><![CDATA[
            <h2>1. 生成新 SSH 金鑰</h2> 
<pre><code class="language-bash">ssh-keygen -t ed25519 -C "your_email@example.com"
</code></pre> 
<p>如果不命名，預設名是 <code>id_ed25519</code>，一路回車。</p> 
<blockquote> 
 <p>如果你用的是舊系統，可以使用 <code>rsa</code> 替代 <code>ed25519</code>。</p> 
</blockquote> 
<p>這時候會自動建立 <code>.ssh</code> 資料夾。</p> 
<h2>2. 進入資料夾</h2> 
<pre><code class="language-bash">cd ~/.ssh
</code></pre> 
<h2>3. 將新的 ssh-key 新增到 ssh-agent</h2> 
<pre><code class="language-ssh">ssh-add ~/.ssh/id_ed25519
</code></pre> 
<h3>4. 儲存公鑰到託管服務，譬如 GitHub</h3> 
<pre><code class="language-ssh">pbcopy &lt; ~/.ssh/id_ed25519.pub
</code></pre> 
<p>貼上到 Github 的這個位置：</p> 
<p>頭像 -&gt; Settings -&gt; SSH and GPG keys -&gt; New SSH key</p> 
<img width="991" alt="github-add-ssh-key" src="https://k51qzi5uqu5dkymx3ipnb91r0m8hnjzih530mffz139egcnyl71h16cefhr8c6.eth.sucks/CB8DD277-C0E1-43C2-8D4E-FAC572EC4F98/github-add-ssh-key.png" /> 
<h3>5. 在不同的 host 中配置</h3> 
<pre><code class="language-bash">vi config
</code></pre> 
<p>點選鍵盤 <code>i</code> 鍵，鍵入以下資料</p> 
<pre><code class="language-ssh"># github
Host github.com
  HostName github.com
  PreferredAuthentications publickey
  IdentityFile ~/.ssh/id_ed25519
# bitbucket
Host bitbucket.org
  HostName bitbucket.org
  PreferredAuthentications publickey
  IdentityFile ~/.ssh/bitbucket_id_ed25519
</code></pre> 
<p>按 <code>esc</code> 退出編輯模式，鍵入 <code>:wq</code> 儲存。</p> 
<h3>6. 測試一下</h3> 
<pre><code class="language-ssh">ssh -T git@github.com
</code></pre> 
<p>如果顯示下面的提示就是成功了，如果沒有可能就要看一下上面的步驟有沒有出錯</p> 
<pre><code class="language-ssh">Hi &lt;user_name&gt;! You've successfully authenticated, but GitHub does not provide shell access.
</code></pre> 
<p>祝程式設計愉悅！</p>
        ]]></description>
    </item>
    
    <item>
        <title>Lizard: Android &#x4E0A;&#x7684; Planet &#x5C0F;&#x700F;&#x89BD;&#x5668;</title>
        <link>https://k51qzi5uqu5dkymx3ipnb91r0m8hnjzih530mffz139egcnyl71h16cefhr8c6.eth.sucks/C4DD285B-6CE3-4C2B-8911-81F2B1D1C91E/</link>
        <guid>https://k51qzi5uqu5dkymx3ipnb91r0m8hnjzih530mffz139egcnyl71h16cefhr8c6.eth.sucks/C4DD285B-6CE3-4C2B-8911-81F2B1D1C91E/</guid>
        <pubDate>Fri, 01 Nov 2024 16:02:04 +0800</pubDate>
        
        
        <description><![CDATA[
            <p>Lizard 是一個沒什麼用的 Planet 小瀏覽器</p>
        ]]></description>
    </item>
    
    <item>
        <title>&#x65B0;&#x7AD9;&#x642D;&#x5EFA;</title>
        <link>https://k51qzi5uqu5dkymx3ipnb91r0m8hnjzih530mffz139egcnyl71h16cefhr8c6.eth.sucks/D510442A-A92C-43FB-9204-3E6481D32550/</link>
        <guid>https://k51qzi5uqu5dkymx3ipnb91r0m8hnjzih530mffz139egcnyl71h16cefhr8c6.eth.sucks/D510442A-A92C-43FB-9204-3E6481D32550/</guid>
        <pubDate>Tue, 20 Aug 2024 20:58:00 +0800</pubDate>
        
        <itunes:image href="https://k51qzi5uqu5dkymx3ipnb91r0m8hnjzih530mffz139egcnyl71h16cefhr8c6.eth.sucks/D510442A-A92C-43FB-9204-3E6481D32550/2024-08-08%2012.02.30.jpeg" />    
        
        
        <description><![CDATA[
            <p>這個地方也是有夠隱秘的😎</p> 
<p>測試一下所有功能</p> 
<img alt="2024-08-08 12.02.30" src="https://k51qzi5uqu5dkymx3ipnb91r0m8hnjzih530mffz139egcnyl71h16cefhr8c6.eth.sucks/D510442A-A92C-43FB-9204-3E6481D32550/2024-08-08 12.02.30.jpeg" />
        ]]></description>
    </item>
    
</channel>
</rss>
